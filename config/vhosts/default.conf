<VirtualHost *:80>
    ServerAdmin webmaster@localhost
    DocumentRoot ${APACHE_DOCUMENT_ROOT}
    ServerName localhost
	<Directory ${APACHE_DOCUMENT_ROOT}>
		AllowOverride all
	</Directory>
</VirtualHost>

# Allows HTTPS on localhost. You will need to use mkcert on your local machine
# to create the `cert.pem` and `cert-key.pem` files, and then place them in the
# `./config/ssl` directory. You coudl also create certificates for any local
# testing domain you wish such as `localapp.test`, you will then edit your hosts
# file to map that domain name to 127.0.0.1 and then configure your vhosts below
# accordingly:
#
# <VirtualHost *:443>
#     ServerAdmin webmaster@localhost
#     DocumentRoot ${APACHE_DOCUMENT_ROOT}
#     ServerName localhost
# 	<Directory ${APACHE_DOCUMENT_ROOT}>
# 		AllowOverride all
# 	</Directory>

#     SSLEngine on
#     SSLCertificateFile /etc/apache2/ssl/cert.pem
#     SSLCertificateKeyFile /etc/apache2/ssl/cert-key.pem
# </VirtualHost>

# Example of configuration for a general PHP project
# <VirtualHost *:80>
#     ServerAdmin webmaster@localhost
#     ServerName example-prj.local
#     DocumentRoot /var/www/html/example-project

#     <Directory "/var/www/html/example-project">
#             Options FollowSymLinks
#             ReWriteEngine On
#     </Directory>
# </VirtualHost>

# Example of configuration for a LARAVEL project
# <VirtualHost *:80>
#     ServerAdmin webmaster@localhost
#     ServerName laravel.local
#     DocumentRoot /var/www/html/laravel-app/public

#     <Directory "/var/www/html/laravel-app/public">
#             Options FollowSymLinks
#             ReWriteEngine On
#     </Directory>
# </VirtualHost>

# Example of configuration for a WORDPRESS project
# <VirtualHost *:80>
#     ServerAdmin webmaster@localhost
# 	ServerName  wordpress.local
# 	DocumentRoot /var/www/html/wordpress/

#     <Directory "/var/www/html/wordpress/">
#         Options FollowSymLinks
#         Order allow,deny
#         Allow from all
#     </Directory>
# </VirtualHost>
